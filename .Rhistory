blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::update_meta_addin()
install.packages("processx")
options(blogdown.generator.server = TRUE)
blogdown:::serve_site()
options(
blogdown.generator.server = TRUE,
blogdown.hugo.server = c('-D', '-F', '--navigateToChanged')
)
options(
blogdown.generator.server = TRUE,
blogdown.hugo.server = c('-D', '-F', '--navigateToChanged')
)
blogdown:::serve_site()
blogdown:::update_meta_addin()
blogdown:::serve_site()
140/8
efunc::bvc()
blogdown:::serve_site()
blogdown:::new_post_addin()
con <- DBI::dbConnect(odbc::odbc(),
Driver   = "PostgreSQL Unicode(x64)",
Server   = "localhost",
Database = "morbi",
UID      = "postgres",
PWD      = "postgres",
Port     = 5432)
DBI::dbDisconnect(con)
rm(con)
pgconn <- DBI::dbConnect(odbc::odbc(),
Driver   = "PostgreSQL Unicode(x64)",
Server   = "localhost",
Database = "morbi",
UID      = "postgres",
PWD      = "postgres",
Port     = 5432)
SELECT codigos.codigo FROM codigos;
SELECT codigos.codigo FROM codigos
# https://db.rstudio.com/databases/postgresql
pgconn <- DBI::dbConnect(odbc::odbc(),
Driver   = "PostgreSQL Unicode(x64)",
Server   = "localhost",
Database = "morbi",
UID      = "postgres",
PWD      = "postgres",
Port     = 5432)
# https://db.rstudio.com/databases/postgresql
pgconn <- DBI::dbConnect(odbc::odbc(),
Driver   = "PostgreSQL Unicode(x64)",
Server   = "localhost",
Database = "morbi",
UID      = "postgres",
PWD      = "postgres",
Port     = 5432)
blogdown:::new_post_addin()
blogdown:::serve_site()
pgconn <- RPostgreSQL::dbConnect(
drv = "PostgreSQL", dbname = "morbi",
user = "postgres", password = "postgres")
pgconn <- RPostgreSQL::dbConnect(
host = "hjahjhsa",
drv = "PostgreSQL", dbname = "morbi",
user = "postgres", password = "postgres")
pgconn <- RPostgreSQL::dbConnect(
host = "localhost",
drv = "PostgreSQL", dbname = "morbi",
user = "postgres", password = "postgres")
blogdown:::serve_site()
#
blogdown:::serve_site()
blogdown::build_site()
blogdown::build_site(TRUE)
blogdown:::serve_site()
blogdown:::insert_image_addin()
blogdown:::serve_site()
# Chunk 1: setup
library(efunc)
library(ggplot2)
library(gridExtra)
library(gtable)
library(dplyr)
library(magrittr)
library(tidyr)
library(readr)
library(readxl)
library(knitr)
library(pander)
opts_chunk$set(echo = ech <- TRUE, warning = ech, message = ech, error = ech,
include = ech, cache.comments = FALSE, cache = TRUE)
# Chunk 2
df1 <- data.frame(id=1:7, var1=rnorm(7))
df2 <- data.frame(id=c(2,4,6), var2=c(7,8,9))
df1
df2
# Chunk 3
cbind(df1, var2=df2[match(df1$id, df2$id), "var2"])
# Chunk 4
merge(x=df1, y=df2, by="id", all.x=TRUE)
# Chunk 5
library(data.table)
dt1 <- data.table(df1)
dt2 <- data.table(df2)
merge(x=dt1, y=dt2, by="id", all.x=TRUE)
# Chunk 6
library(dplyr)
left_join(x=df1, y=df2, by="id")
# Chunk 7
library(microbenchmark)
library(ggplot2)
mbm <- microbenchmark(
cbind_match = cbind(df1, var2=df2[match(df1$id, df2$id), "var2"]),
merge_dataframe = merge(df1, df2, by="id", all.x=TRUE),
merge_datatable = merge(dt1, dt2, by="id", all.x=TRUE),
dplyr_dataframe = left_join(x=df1, y=df2, by="id"),
dplyr_datatable = left_join(x=dt1, y=dt2, by="id"),
times=1000)
autoplot(mbm)
# Chunk 8
gp <- ggplot(data = mbm, aes(x = log(time), fill = expr))
gp <- gp + geom_density(color = NA, alpha = 0.7)
gp <- gp + geom_rug()
gp <- gp + theme(legend.position = "bottom")
gp
# Chunk 9
df1 <- data.frame(id=c(1:7), var1=rnorm(7))
df2 <- data.frame(id=c(2,7,7), var2=c(7,8,9))
cbind(df1, var2=df2[match(df1$id, df2$id), "var2"])
merge(df1, df2, by="id", all.x=TRUE)
# Chunk 10
merge_compare <- function(n1, n2){
n <- 2*max(n1,n2)
df1 <- data.frame(id=sample(1:n, size=n1, replace=FALSE),
var1=rnorm(n1))
df2 <- data.frame(id=sample(1:n, size=n2, replace=FALSE),
var2=rnorm(n2))
dt1 <- data.table(df1)
dt2 <- data.table(df2)
mbm <- microbenchmark(
cbind_match = cbind(df1, var2=df2[match(df1$id, df2$id), "var2"]),
merge_dataframe = merge(df1, df2, by="id", all.x=TRUE),
merge_datatable = merge(dt1, dt2, by="id", all.x=TRUE),
dplyr_dataframe = left_join(x=df1, y=df2, by="id"),
dplyr_datatable = left_join(x=dt1, y=dt2, by="id"),
times=1000)
mbm
}
# Chunk 12
#load(file = "all_merge_performance_microbenchmark.RData")
# Chunk 1: setup
library(efunc)
library(ggplot2)
library(gridExtra)
library(gtable)
library(dplyr)
library(magrittr)
library(tidyr)
library(readr)
library(readxl)
library(knitr)
library(pander)
opts_chunk$set(echo = ech <- TRUE, warning = ech, message = ech, error = ech,
include = ech, cache.comments = FALSE, cache = TRUE)
# Chunk 2
df1 <- data.frame(id=1:7, var1=rnorm(7))
df2 <- data.frame(id=c(2,4,6), var2=c(7,8,9))
df1
df2
# Chunk 3
cbind(df1, var2=df2[match(df1$id, df2$id), "var2"])
# Chunk 4
merge(x=df1, y=df2, by="id", all.x=TRUE)
# Chunk 5
library(data.table)
dt1 <- data.table(df1)
dt2 <- data.table(df2)
merge(x=dt1, y=dt2, by="id", all.x=TRUE)
# Chunk 6
library(dplyr)
left_join(x=df1, y=df2, by="id")
# Chunk 7
library(microbenchmark)
library(ggplot2)
mbm <- microbenchmark(
cbind_match = cbind(df1, var2=df2[match(df1$id, df2$id), "var2"]),
merge_dataframe = merge(df1, df2, by="id", all.x=TRUE),
merge_datatable = merge(dt1, dt2, by="id", all.x=TRUE),
dplyr_dataframe = left_join(x=df1, y=df2, by="id"),
dplyr_datatable = left_join(x=dt1, y=dt2, by="id"),
times=1000)
autoplot(mbm)
# Chunk 8
gp <- ggplot(data = mbm, aes(x = log(time), fill = expr))
gp <- gp + geom_density(color = NA, alpha = 0.7)
gp <- gp + geom_rug()
gp <- gp + theme(legend.position = "bottom")
gp
# Chunk 9
df1 <- data.frame(id=c(1:7), var1=rnorm(7))
df2 <- data.frame(id=c(2,7,7), var2=c(7,8,9))
cbind(df1, var2=df2[match(df1$id, df2$id), "var2"])
merge(df1, df2, by="id", all.x=TRUE)
# Chunk 10
merge_compare <- function(n1, n2){
n <- 2*max(n1,n2)
df1 <- data.frame(id=sample(1:n, size=n1, replace=FALSE),
var1=rnorm(n1))
df2 <- data.frame(id=sample(1:n, size=n2, replace=FALSE),
var2=rnorm(n2))
dt1 <- data.table(df1)
dt2 <- data.table(df2)
mbm <- microbenchmark(
cbind_match = cbind(df1, var2=df2[match(df1$id, df2$id), "var2"]),
merge_dataframe = merge(df1, df2, by="id", all.x=TRUE),
merge_datatable = merge(dt1, dt2, by="id", all.x=TRUE),
dplyr_dataframe = left_join(x=df1, y=df2, by="id"),
dplyr_datatable = left_join(x=dt1, y=dt2, by="id"),
times=1000)
mbm
}
N1 <- c(10, 1000, 50000, 700000, 10000000)
N2 <- c(10, 1000, 50000, 700000, 10000000)
all <- data.frame()
for (n1 in N1){
for (n2 in N2){
mbm <- merge_compare(n1, n2)
mbm$n1 <- n1
mbm$n2 <- n2
all <- rbind(all, as.data.frame(mbm))
}
blogdown:::serve_site()
# Chunk 1: setup
library(efunc)
library(ggplot2)
library(gridExtra)
library(gtable)
library(dplyr)
library(magrittr)
library(tidyr)
library(readr)
library(readxl)
library(knitr)
library(pander)
library(wbstats)
opts_chunk$set(echo = ech <- TRUE, warning = ech, message = TRUE, error = ech,
include = TRUE, cache.comments = FALSE, cache = FALSE)
library(wbstats)
# Checkout the available data
str(wb_cachelist, max.level = 1)
# Update the available data
new_cache <- wbcache()
# Find out what health related indicators are available
health_indicators <- wbsearch(pattern = "health", cache = new_cache)
blogdown:::serve_site()
# Chunk 1: setup
library(efunc)
library(ggplot2)
library(gridExtra)
library(gtable)
library(dplyr)
library(magrittr)
library(tidyr)
library(readr)
library(readxl)
library(knitr)
library(pander)
library(wbstats)
opts_chunk$set(echo = ech <- TRUE, warning = ech, message = TRUE, error = ech,
include = TRUE, cache.comments = FALSE, cache = FALSE)
library(wbstats)
# Checkout the available data
str(wb_cachelist, max.level = 1)
# Update the available data
new_cache <- wbcache()
# Find out what health related indicators are available
health_indicators <- wbsearch(pattern = "health", cache = new_cache)
library(wbstats)
# Checkout the available data
str(wb_cachelist, max.level = 1)
# Update the available data
new_cache <- wbcache()
# Find out what health related indicators are available
health_indicators <- wbsearch(pattern = "health", cache = new_cache)
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
efunc::eur_cop()
46900*5
46800*7
46800*7 + 1000
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
46800*7
install.packages("rbokeh")
?rbokeh::figure()
?bk_ggplot_theme
blogdown:::serve_site()
efunc::eur_cop()
blogdown:::new_post_addin()
blogdown:::serve_site()
efunc::eur_cop()
blogdown:::serve_site()
blogdown::install_hugo()
blogdown:::serve_site()
